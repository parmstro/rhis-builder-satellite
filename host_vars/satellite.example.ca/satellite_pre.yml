---

async_timeout: 14400
async_delay: 30

# disable transparent huge pages
# install tuned, create a tuned profile

apply_standard_tuning: true

# prerequisites
satellite_pre_use_subman: true
cdn_organization_id: "{{ cdn_organization_id_vault }}"
cdn_sat_activation_key: "{{ cdn_sat_activation_key_vault }}"

repository_ids:
  - rhel-9-for-x86_64-baseos-rpms
  - rhel-9-for-x86_64-appstream-rpms
  - satellite-6.17-for-rhel-9-x86_64-rpms
  - satellite-maintenance-6.17-for-rhel-9-x86_64-rpms

sat_firewalld_zone: "public"
sat_firewalld_services:
  - RH-Satellite-6
  - http
  - https
  - dhcp
  - dns
  - tftp

timeservers:
  - "192.168.252.7"
  - "192.168.252.8"
  - "192.168.252.9"

# Set this variable to false to skip IdM integration
# Note: this probably means you aren't using Realms anywhere
# unless they are AD realms, so check variable files referencing
# realms, like hostgroups, realms, etc..
satellite_pre_use_idm: true
# If you are integrating with IdM and you don't want to regenerate the
# keytab file for your realm user (because you have capsules that are currently using it)
# set skip_prepare_realm below to true. This will avoid having
# to redistribute the keytab file to your capsules.
skip_prepare_realm: false

# IdM client vars
ipa_admin_password: "{{ ipa_admin_password_vault }}"
ipa_admin_principal: "{{ ipa_admin_principal_vault }}"
ipa_server_fqdn: "idm.example.ca"
ipa_server_domain: "example.ca"
ipa_server_realm: "{{ ipa_server_domain | upper }}"
ipa_client_domain: "{{ ipa_server_domain }}"
ipa_client_configure_dns_resolver: true
ipa_client_dns_servers: "192.168.140.5"
ipa_client_mkhomedir: true
ipasssd_enable_dns_updates: true
ipa_dns_reverse_zone: "168.192.in-addr.arpa"
ipa_dns_zone: "example.ca"
ipa_default_bind_policy: "grant {{ ipa_server_realm }} krb5-self * A; grant {{ ipa_server_realm }} krb5-self * AAAA; grant {{ ipa_server_realm }} krb5-self * SSHFP;" # noqa yaml[line-length]
ipa_default_bind_policy_reverse: "grant {{ ipa_server_realm }} krb5-subdomain {{ ipa_dns_reverse_zone }} PTR;"


# ipaclient role vars: these do not follow standards
ipaadmin_password: "{{ ipa_admin_password_vault }}"
ipaadmin_principal: "{{ ipa_admin_principal_vault }}"
ipaserver_fqdn: "{{ ipa_server_fqdn }}"
ipaclient_domain: "{{ ipa_server_domain }}"
ipaclient_realm: "{{ ipa_server_domain | upper }}"
ipaclient_configure_dns_resolver: "{{ ipa_client_configure_dns_resolver }}"
ipaclient_dns_servers: "{{ ipa_client_dns_servers }}"
ipaclient_mkhomedir: "{{ ipa_client_mkhomedir }}"
ipaclient_force_join: true # force rejoin of realm if we are rebuilding satellite without rebuilding IdM

# Satellite specific vars used with IdM
ipa_generate_certs: true

# this is the name of the user being passed to prepare realm
foreman_proxy_realm_role_name: "Smart Proxy Host Manager"
foreman_proxy_realm_principal: "realm-capsule"
foreman_proxy_dns_update_policy: "grant {{ foreman_proxy_realm_principal }}\\@{{ ipa_server_realm }} wildcard * ANY;"
foreman_proxy_bind_update_policy: "{{ ipa_default_bind_policy }}{{ foreman_proxy_dns_update_policy }}"
foreman_proxy_dns_update_policy_reverse: "grant {{ foreman_proxy_realm_principal }}\\@{{ ipa_server_realm }} wildcard * ANY;"
foreman_proxy_bind_update_policy_reverse: "{{ ipa_default_bind_policy_reverse }}{{ foreman_proxy_dns_update_policy_reverse }}"
keytab_retrieval_password: "{{ ipa_admin_password_vault }}"
keytab_retrieval_dn: "{{ ipa_keytab_dn }}"

sat_ssl_rsa_key_pass: "{{ sat_ssl_rsa_key_pass_vault }}"
sat_ssl_certs_dir: "/etc/ipa/private/{{ ansible_fqdn }}/"
sat_ssl_crt_path: "{{ sat_ssl_certs_dir }}{{ ansible_fqdn }}.crt"
sat_ssl_key_path: "{{ sat_ssl_certs_dir }}{{ ansible_fqdn }}.key"
sat_ssl_csr_path: "{{ sat_ssl_certs_dir }}{{ ansible_fqdn }}.csr"
ipa_server_ca_path: "/etc/ipa/ca.crt"

crt_service_type: "HTTP"
crt_force_regen: true

passfile: "{{ sat_ssl_certs_dir }}passfile"
ssl_private_key_cipher: "aes256"
ssl_private_key_size: 4096
ssl_private_key_pem_path: "{{ sat_ssl_certs_dir }}{{ ansible_fqdn }}.pem"
ssl_public_key_path: "{{ sat_ssl_certs_dir }}{{ ansible_fqdn }}.pub"
ssl_public_key_format: "PEM"

csr_digest: "aes256"
csr_organization_name: "{{ ansible_domain | upper }}"
csr_organization_unit_name: "Demo Lab"
csr_locality_name: "Hespeler"
csr_state_or_province_name: "ON"
csr_country_name: "CA"
csr_email_address: "admin@{{ ansible_domain }}"
